using Freeserf.Data;
using System;

namespace Freeserf.Render;

class CustomSprites
{
    static readonly Color[] SpeedButtonsColors =
    [
        new(84, 100, 124, 255),
        new(81, 89, 101, 255),
        new(73, 88, 112, 255),
        new(76, 83, 95, 255),
        new(74, 80, 92, 255),
        new(69, 82, 106, 255),
        new(59, 87, 135, 255),
        new(79, 86, 98, 255),
        new(79, 94, 118, 255),
        new(79, 111, 159, 255),
        new(91, 123, 171, 255),
        new(67, 99, 147, 255),
        new(239, 239, 239, 255),
        new(72, 79, 89, 255),
        new(57, 69, 90, 255),
        new(70, 76, 87, 255),
        new(65, 79, 100, 255),
        new(51, 79, 123, 255),
        new(53, 65, 84, 255),
        new(51, 61, 79, 255),
        new(84, 92, 103, 255),
        new(96, 114, 134, 255),
        new(110, 128, 146, 255),
        new(115, 151, 191, 255),
        new(27, 51, 91, 255),
        new(126, 142, 158, 255),
        new(94, 103, 112, 255),
        new(90, 99, 109, 255),
        new(143, 179, 215, 255),
        new(61, 73, 96, 255),
        new(43, 67, 115, 255),
    ];

    static readonly byte[] SpeedButtonsColorIndices =
    [
        0x00, 0x01, 0x01, 0x00, 0x00, 0x01, 0x01, 0x00, 0x02, 0x03, 0x04, 0x05, 0x06, 0x06, 0x06, 0x06,
        0x02, 0x07, 0x08, 0x07, 0x07, 0x08, 0x09, 0x09, 0x08, 0x07, 0x08, 0x01, 0x01, 0x00, 0x01, 0x01,
        0x00, 0x0a, 0x0a, 0x08, 0x07, 0x08, 0x03, 0x04, 0x05, 0x04, 0x04, 0x02, 0x03, 0x03, 0x02, 0x0b,
        0x0b, 0x00, 0x0c, 0x0c, 0x00, 0x00, 0x0c, 0x0c, 0x08, 0x02, 0x0c, 0x0c, 0x03, 0x03, 0x0b, 0x0b,
        0x09, 0x00, 0x0c, 0x03, 0x04, 0x0c, 0x0d, 0x06, 0x09, 0x0e, 0x0c, 0x0f, 0x0d, 0x0c, 0x0d, 0x0f,
        0x0c, 0x04, 0x0b, 0x0b, 0x08, 0x0c, 0x04, 0x0d, 0x0c, 0x0d, 0x0d, 0x0c, 0x04, 0x04, 0x0c, 0x04,
        0x06, 0x06, 0x07, 0x0c, 0x0c, 0x01, 0x01, 0x0c, 0x0c, 0x01, 0x05, 0x0c, 0x0c, 0x0c, 0x0c, 0x03,
        0x07, 0x09, 0x05, 0x0c, 0x0c, 0x02, 0x0c, 0x0c, 0x08, 0x09, 0x05, 0x0c, 0x0c, 0x05, 0x0c, 0x0c,
        0x10, 0x0c, 0x0c, 0x10, 0x11, 0x05, 0x0c, 0x0c, 0x05, 0x0c, 0x0c, 0x10, 0x0c, 0x0c, 0x10, 0x0c,
        0x0c, 0x05, 0x06, 0x01, 0x0c, 0x0c, 0x04, 0x04, 0x0c, 0x0c, 0x04, 0x00, 0x0c, 0x0c, 0x0c, 0x0c,
        0x0c, 0x0c, 0x02, 0x12, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x13, 0x02, 0x0c, 0x0c, 0x0c, 0x0c,
        0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x02, 0x10, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c,
        0x0c, 0x0c, 0x0c, 0x08, 0x14, 0x0c, 0x0c, 0x01, 0x07, 0x0c, 0x0c, 0x07, 0x02, 0x0c, 0x0c, 0x0c,
        0x0c, 0x04, 0x0d, 0x11, 0x15, 0x0c, 0x0c, 0x16, 0x0c, 0x0c, 0x16, 0x17, 0x0e, 0x0c, 0x0c, 0x0e,
        0x0c, 0x0c, 0x13, 0x0c, 0x0c, 0x13, 0x18, 0x02, 0x0c, 0x0c, 0x02, 0x0c, 0x0c, 0x02, 0x0c, 0x0c,
        0x02, 0x0c, 0x0c, 0x08, 0x09, 0x05, 0x0c, 0x0c, 0x05, 0x05, 0x0c, 0x0c, 0x05, 0x02, 0x0c, 0x0c,
        0x03, 0x03, 0x0b, 0x0b, 0x06, 0x05, 0x0c, 0x04, 0x04, 0x0c, 0x04, 0x11, 0x06, 0x19, 0x0c, 0x1a,
        0x1b, 0x0c, 0x1b, 0x1a, 0x0c, 0x1a, 0x1c, 0x1c, 0x05, 0x0c, 0x0d, 0x0d, 0x0c, 0x04, 0x0d, 0x0c,
        0x0d, 0x0d, 0x0c, 0x04, 0x06, 0x06, 0x05, 0x04, 0x0d, 0x05, 0x05, 0x04, 0x04, 0x05, 0x08, 0x07,
        0x07, 0x08, 0x09, 0x09, 0x09, 0x09, 0x02, 0x03, 0x02, 0x03, 0x03, 0x00, 0x0a, 0x0a, 0x00, 0x07,
        0x08, 0x07, 0x07, 0x08, 0x07, 0x07, 0x08, 0x09, 0x09, 0x10, 0x0d, 0x10, 0x0d, 0x0d, 0x10, 0x0d,
        0x0d, 0x10, 0x0f, 0x0f, 0x1d, 0x1e, 0x11,
    ];

    public static readonly Sprite SpeedButtons = Create(49, 7, SpeedButtonsColors, SpeedButtonsColorIndices);

    static Sprite Create(uint width, uint height, Color[] colors, byte[] colorIndices)
    {
        if (colorIndices.Length != width * height)
            throw new ArgumentException("Color indices length must match width times height");

        var data = new byte[width * height * 4];
        int index = 0;

        for (int i = 0; i < colorIndices.Length; i++)
        {
            var color = colors[colorIndices[i]];

            data[index++] = color.R;
            data[index++] = color.G;
            data[index++] = color.B;
            data[index++] = color.A;
        }

        return Sprite.CreateFromData(width, height, data);
    }
}
